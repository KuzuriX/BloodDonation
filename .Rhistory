nacion.TDM <- TermDocumentMatrix(myCorpus)
top<-as.data.frame(sort((apply(nacion.TDM, 1, sum)),decreasing = T))
freqNormMatrix <- as.matrix(nacion.TDM)
nacion.TDM <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1, Inf),weighting =
function(x)
weightTfIdf(x, normalize =
FALSE)))
topTFIDF<-as.data.frame(sort((apply(nacion.TDM, 1, sum)),decreasing = T))
write.csv(topTFIDF, file = 'ExtratopFrecuenciasTFIDF.csv')
dimnames(nacion.TDM)$Terms
nacion.TDM <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1, Inf),weighting =
function(x)
weightTfIdf(x, normalize =
FALSE)))
topTFIDF<-as.data.frame(sort((apply(nacion.TDM, 1, sum)),decreasing = T))
corpus_words <- text_df %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word) %>%
count( word, sort = TRUE) %>%
ungroup()
total_words <- corpus_words %>%
#  group_by(periodico) %>%
summarize(total = sum(n))
corpus_words <- left_join(corpus_words, total_words)
ggplot(corpus_words, aes(n/total, fill = periodico)) +
geom_histogram(show.legend = FALSE) +
xlim(NA, 0.0009) +
facet_wrap(~periodico, ncol = 2, scales = "free_y")
corpus_words <- corpus_words %>%
bind_tf_idf(word, n)
text_df2 <-text_df
text_df2$periodico<-1
corpus_words <- text_df %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word) %>%
count(periodico ,word, sort = TRUE) %>%
ungroup()
total_words <- corpus_words %>%
group_by(periodico) %>%
summarize(total = sum(n))
corpus_words <- left_join(corpus_words, total_words)
corpus_words <- corpus_words %>%
bind_tf_idf(word, n)
corpus_words <- corpus_words %>%
bind_tf_idf(word, periodico, n)
corpus_words %>%
arrange(desc(tf_idf)) %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(periodico) %>%
top_n(15) %>%
ungroup %>%
ggplot(aes(word, tf_idf, fill = periodico)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~periodico, ncol = 2, scales = "free") +
coord_flip()
text_df2 <-text_df
text_df2$periodico<-1
corpus_words <- text_df2 %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word) %>%
count(periodico ,word, sort = TRUE) %>%
ungroup()
total_words <- corpus_words %>%
group_by(periodico) %>%
summarize(total = sum(n))
corpus_words <- left_join(corpus_words, total_words)
corpus_words
word_cors %>%
filter(item1 %in% c("sánchez", "feoli", "trabajo", "distribución","igualdad")) %>%
group_by(item1) %>%
top_n(10) %>%
ungroup() %>%
mutate(item2 = reorder(item2, correlation)) %>%
ggplot(aes(item2, correlation)) +
geom_bar(stat = "identity") +
facet_wrap(~ item1, scales = "free") +
coord_flip()
word_cors %>%
filter(item1 %in% c("sánchez", "feoli", "trabajo", "distribución","igualdad")) %>%
group_by(item1) %>%
top_n(10) %>%
ungroup() %>%
mutate(item2 = reorder(item2, correlation)) %>%
filter(!item2 == "marco") %>%
ggplot(aes(item2, correlation)) +
geom_bar(stat = "identity") +
facet_wrap(~ item1, scales = "free") +
coord_flip()
word_cors %>%
filter(item1 %in% c("sánchez", "feoli", "trabajo", "distribución","igualdad")) %>%
group_by(item1) %>%
top_n(10) %>%
ungroup() %>%
mutate(item2 = reorder(item2, correlation)) %>%
filter(!item2 %in% c("marco","cecilia")) %>%
ggplot(aes(item2, correlation)) +
geom_bar(stat = "identity") +
facet_wrap(~ item1, scales = "free") +
coord_flip()
word_cors %>%
filter(item1 %in% c("sánchez", "feoli", "trabajo", "distribución","igualdad")) %>%
group_by(item1) %>%
top_n(10) %>%
ungroup() %>%
mutate(item2 = reorder(item2, correlation)) %>%
filter(!item2 %in% c("marco","cecilia")) %>%
ggplot(aes(item2, correlation)) +
geom_bar(stat = "identity") +
facet_wrap(~ item1, scales = "free") +
coord_flip()+
labs(colour = "Cylinders")
word_cors %>%
filter(item1 %in% c("sánchez", "feoli", "trabajo", "distribución","igualdad")) %>%
group_by(item1) %>%
top_n(10) %>%
ungroup() %>%
mutate(item2 = reorder(item2, correlation)) %>%
filter(!item2 %in% c("marco","cecilia")) %>%
ggplot(aes(item2, correlation)) +
geom_bar(stat = "identity") +
facet_wrap(~ item1, scales = "free") +
coord_flip()+
labs(colour = "Cylinders")
set.seed(2016)
word_cors %>%
filter(correlation > .8) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(width = correlation), show.legend = T, alpha=.2) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
set.seed(2016)
word_cors %>%
filter(correlation > .75) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(width = correlation), show.legend = T, alpha=.2) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
set.seed(2016)
word_cors %>%
filter(correlation > .70) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(width = correlation), show.legend = T, alpha=.2) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
sent< - read.table('sentimientos_2.txt')
sent<- read.table('sentimientos_2.txt')
View(sents)
View(sent)
sents<- read.table('sentimientos_2.txt')
View(sents)
colnames(sents)<- c("Palabra", "sentiment")
senti$word<-sents$Palabra
senti$sentiment<-sents$sentiment
View(sents)
senti$word<-sents$Palabra
View(senti)
senti <- data_frame(word=sents$V1,sentiment=sents$V2)
sents<- read.table('sentimientos_2.txt')
senti <- data_frame(word=sents$V1,sentiment=sents$V2)
senti$word <- as.character(senti$word)
senti$word<-sents$Palabra
senti$sentiment<-sents$sentiment
senti<-as.data.frame(senti)
senti<-senti[!is.na(senti$sentiment),2:3]
senti$word<-as.character(senti$word)
bing_word_counts <- tidy_text %>%
left_join(senti) %>%
dplyr::count(word, sentiment, sort = TRUE) %>%
ungroup()
View(senti)
senti <- data_frame(word=sents$V1,sentiment=sents$V2)
senti$word<-sents$Palabra
senti$sentiment<-sents$sentiment
senti <- data_frame(word=sents$V1,sentiment=sents$V2)
View(senti)
senti$word<-as.character(senti$word)
bing_word_counts <- tidy_text %>%
left_join(senti) %>%
dplyr::count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "",
x = NULL) +
coord_flip()
sents<- read.table('sentimientos_2.txt')
sents<- read.table('sentimientos_2.txt')
sents<- read.table('sentimientos_2.txt')
senti <- data_frame(word=sents$V1,sentiment=sents$V2)
senti$word <- as.character(senti$word)
bing_word_counts <- tidy_text %>%
left_join(senti) %>%
dplyr::count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "",
x = NULL) +
coord_flip()
sents<- read.table('sentimientos_2.txt')
senti <- data_frame(word=sents$V1,sentiment=sents$V2)
senti$word <- as.character(senti$word)
bing_word_counts <- tidy_text %>%
left_join(senti) %>%
dplyr::count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "",
x = NULL) +
coord_flip()
bing_word_counts %>%
filter(is.na(sentiment))
bing_word_counts %>%
filter(is.na(sentiment)) %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "",
x = NULL) +
coord_flip()
bing_word_counts %>%
filter(!is.na(sentiment)) %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "",
x = NULL) +
coord_flip()
senti$sentiment[senti$word=="positive"]<-'positivo'
senti$sentiment[senti$word=="negative"]<-'negativo'
senti$sentiment[senti$sentiment=="positive"]<-'positivo'
View(senti)
senti$sentiment[senti$sentiment=="positive"]<
senti$sentiment[senti$sentiment=="positive"]
sents<- read.table('sentimientos_2.txt')
senti <- data_frame(word=sents$V1,sentiment=sents$V2)
sents<- read.table('sentimientos_2.txt')
senti <- data_frame(word=sents$V1,sentiment=sents$V2)
senti$word <- as.character(senti$word)
senti$sentiment[senti$sentiment=="positive"]<-'positivo'
bing_word_counts %>%
filter(word %in% c("sánchez", "feoli")) %>%
group_by(word) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, sentiment)) %>%
ggplot(aes(item2, correlation)) +
geom_bar(stat = "identity") +
facet_wrap(~ item1, scales = "free") +
coord_flip()
cat("\014")
rm(list=ls())
blood = read.csv(file = file.choose(), stringsAsFactors = F)
getwd()
library(rstudioapi)
install.packages("rstudioapi")
library(rstudioapi)
rstudioapi::getActiveDocumentContext()$path
path = rstudioapi::getActiveDocumentContext()$path
regexpr(".R", path)
length(path)
nchar(path)
source()
rstudioapi::getActiveDocumentContext()
pp = rstudioapi::getActiveDocumentContext()
basename()
?basename
basename(path)
pp = sub(basename(path), '', path)
pp
setwd(pp)
getwd()
library(rstudioapi)
cat("\014")
rm(list=ls())
library(rstudioapi)
path = rstudioapi::getActiveDocumentContext()$path
path = sub(basename(path), '', path)
setwd(path)
blood = read.csv(file = file.choose(), stringsAsFactors = F)
summary(blood)
View(blood)
blood = blood[,-1]
names(blood) = c("MonthsLastDonation", "NoDonations", "TotalVolume", "MonthsFirstDonation", "MadeDonation")
blood = blood[,-3]
pairs(blood)
boxplot(blood$MonthsLastDonation~blood$MadeDonation)
boxplot(blood$NoDonations~blood$MadeDonation)
boxplot(blood$MonthsFirstDonation~blood$MadeDonation)
library(ggplot2)
e <- ggplot(blood, aes(MonthsLastDonation, MonthsFirstDonation))
e + geom_point()
e <- ggplot(blood, aes(MonthsLastDonation, MonthsFirstDonation))
e + geom_point(fill = MadeDonation)
?geom_point
e <- ggplot(blood, aes(MonthsLastDonation, MonthsFirstDonation))
e + geom_point(aes(colour = factor(MadeDonation)))
e <- ggplot(blood, aes(log(MonthsLastDonation), log(MonthsFirstDonation))
e + geom_point(aes(colour = factor(MadeDonation)))
#CORTEST
cor(blood[,-1])
#Hypothesis Test
#H0 = avg meses desde la ultima donacion es igual si hizo la donacion o no
#H1 = avg meses desde la ultima donacion es diferente si hizo la donacion o no
#h0 = avg months since last donations is equal if you didnt donate
#h1 = avg months since last donation is larger if you didnt donate
months0 = (subset(blood, select = Months.since.Last.Donation, Made.Donation.in.March.2007==0))
months1 = subset(blood, select = Months.since.Last.Donation, Made.Donation.in.March.2007==1)
t.test(months0$Months.since.Last.Donation, months1$Months.since.Last.Donation, alternative = "greater",conf.level = 0.95)
#The difference of months since last donation is greater if you didnt donate
#p-value < 0.05
#h0 = avg number of donations is equal if you didnt donate
#h1 = avg number of donations is larger if you didnt donate
number0 = (subset(blood, select = Number.of.Donations, Made.Donation.in.March.2007==0))
number1 = (subset(blood, select = Number.of.Donations, Made.Donation.in.March.2007==1))
t.test(number0$Number.of.Donations, number1$Number.of.Donations, alternative = "less" ,conf.level = 0.95)
#The difference of donations between the people that donated is statistically different from the people who didnt.
#Data Formatting and Cleaning
blood = blood[,-1]
names(blood) = c("MonthsLastDonation", "NoDonations", "TotalVolume", "MonthsFirstDonation", "MadeDonation")
#Linear Regression between Y and X
lm1 = lm(MadeDonation~MonthsLastDonation+NoDonations+TotalVolume+MonthsFirstDonation, data = blood)
summary(lm1)
# TotalVolume with NA since it's perfectly correlated with NoDonations, will create an interaction between them
blood$Volume = blood$TotalVolume/blood$NoDonations
#Remove the variable created since the volume is the number of donations * 250cc
blood =blood[,-6]
lm2 = lm(MadeDonation~MonthsLastDonation+NoDonations+MonthsFirstDonation, data = blood)
summary(lm2)
lm2$fitted.values
#NON linear regression since the response variable is categorical. Using Logistic Regression.
glm1 = glm(MadeDonation~MonthsLastDonation+NoDonations+MonthsFirstDonation, family=binomial(link=logit), data = blood)
summary(glm1)
library(RWeka)
blood[,5] = as.factor(blood[,5])
blood<-blood[,-3]
smp_size <- floor(0.75 * nrow(blood))  ## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(blood)), size = smp_size)
train <- blood[train_ind, ]
test <- blood[-train_ind, ]
fit <- J48(MadeDonation~MonthsLastDonation+NoDonations+MonthsFirstDonation, data=train)
summary(fit)
library(partykit)
plot(fit)
pr = subset(train, MonthsLastDonation <=7 & NoDonations<=18 & MonthsFirstDonation>49)
summary(pr)
predict(fit, pr)
samNeg = blood[sample(row.names(subset(blood, MadeDonation == 0)),100,replace = T ),]
samPos = blood[sample(row.names(subset(blood, MadeDonation == 1)),100,replace = T ),]
train_b = samNeg
train_b = rbind(train_b, samPos)
summary(train_b)
fit <- J48(MadeDonation~MonthsLastDonation+NoDonations+MonthsFirstDonation, data=train_b)
summary(fit)
e <- ggplot(blood, aes(log(MonthsLastDonation), log(MonthsFirstDonation)))
e + geom_point(aes(colour = factor(MadeDonation)))
e <- ggplot(blood, aes(log(MonthsLastDonation), log(MonthsFirstDonation)))
e + geom_point(aes(colour = factor(MadeDonation)))
e <- ggplot(blood, aes(log(MonthsLastDonation), log(MonthsFirstDonation)))
e + geom_point(blood,aes(colour = factor(MadeDonation)))
e <- ggplot(blood, aes(log(MonthsLastDonation), log(MonthsFirstDonation)))
e + geom_point(aes(colour = factor(MadeDonation)))
e <- ggplot(blood, aes(MonthsLastDonation, MonthsFirstDonation))
e + geom_point(aes(colour = factor(MadeDonation)))
cat("\014")
rm(list=ls())
library(rstudioapi)
library(ggplot2)
path = rstudioapi::getActiveDocumentContext()$path
path = sub(basename(path), '', path)
setwd(path)
blood = read.csv(file = file.choose(), stringsAsFactors = F)
summary(blood)
blood = blood[,-1]
names(blood) = c("MonthsLastDonation", "NoDonations", "TotalVolume", "MonthsFirstDonation", "MadeDonation")
blood = blood[,-3]
pairs(blood)
boxplot(blood$MonthsLastDonation~blood$MadeDonation)
boxplot(blood$NoDonations~blood$MadeDonation)
boxplot(blood$MonthsFirstDonation~blood$MadeDonation)
e <- ggplot(blood, aes(MonthsLastDonation, MonthsFirstDonation))
e + geom_point(aes(colour = factor(MadeDonation)))
e <- ggplot(blood,
aes(log(MonthsLastDonation), log(MonthsFirstDonation)))
e + geom_point(aes(colour = factor(MadeDonation)))
ggplot(blood,
aes(MonthsLastDonation, MonthsFirstDonation))
ggplot(blood,
aes(MonthsLastDonation, MonthsFirstDonation))
+ geom_point(aes(colour = factor(MadeDonation)))
ggplot(blood, aes(MonthsLastDonation, MonthsFirstDonation)) +
geom_point(aes(colour = factor(MadeDonation)))
ggplot(blood, aes(MonthsLastDonation, NoDonations)) +
geom_point(aes(colour = factor(MadeDonation)))
ggplot(blood, aes(NoDonations, MonthsFirstDonation)) +
geom_point(aes(colour = factor(MadeDonation)))
mod <- glm(MadeDonation~MonthsLastDonation+NoDonations+MonthsFirstDonation,
family=binomial(link=logit), data = blood)
cooksd <- cooks.distance(mod)
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
summary(mod)
library(pscl)
install.packages("pscl")
library(pscl)
pR2(mod)
influential <- as.numeric(names(cooksd)[(cooksd > 4*mean(cooksd, na.rm=T))])
blood2 <- blood[influential,]
mod2 <- glm(MadeDonation~MonthsLastDonation+NoDonations+MonthsFirstDonation,
family=binomial(link=logit), data = blood2)
influential
blood2 <- blood[-influential,]
mod2 <- glm(MadeDonation~MonthsLastDonation+NoDonations+MonthsFirstDonation,
family=binomial(link=logit), data = blood2)
pR2(mod2)
ggplot(blood2, aes(MonthsLastDonation, MonthsFirstDonation)) +
geom_point(aes(colour = factor(MadeDonation)))
ggplot(blood2, aes(MonthsLastDonation, NoDonations)) +
geom_point(aes(colour = factor(MadeDonation)))
ggplot(blood2, aes(NoDonations, MonthsFirstDonation)) +
geom_point(aes(colour = factor(MadeDonation)))
hist(blood$MonthsLastDonation)
hist(blood$NoDonations)
hist(blood$MonthsFirstDonation)
library(mvoutlier)
install.packages("mvoutlier")
library(mvoutlier)
head(blood[-4])
aq.plot(blood[-4])
chisq.plot(blood[-4])
chisq.plot(blood[-4])
chisq.plot(blood[-4])
outliers<- c(1,9,387,389,264,398,388,93,5,391,524,4,517,516,189,573)
outliers %in% influential
install.packages("MVN")
library(MVN)
result <- mvOutlier(blood[-4])
result <- MVN::mvOutlier(blood[-4])
result <- MVN::mvoutlier(blood[-4])
install.packages("MVN")
library(MVN)
result <- MVN::mvOutlier(blood[-4])
result <- MVN::mvOutlier(blood[-4])
result <- mvOutlier(blood[-4])
library(MVN)
result <- mvOutlier(blood[-4], qqplot = TRUE, method = "quan") #non-adjusted
df2 <- blood[, -4]    # Remove SalePrice Variable
m_dist <- mahalanobis(df2, colMeans(df2), cov(df2))
df$MD <- round(m_dist, 1)
df2$MD <- round(m_dist, 1)
df2$outlier <- "No"
df2$outlier[df$MD > 20] <- "Yes"    # Threshold set to 20
df2$outlier[df2$MD > 20] <- "Yes"    # Threshold set to 20
ggplot(df2, aes(NoDonations, MonthsFirstDonation)) +
geom_point(aes(colour = factor(outlier)))
ggplot(df2, aes(NoDonations, MonthsFirstDonation)) +
geom_point(aes(colour = factor(outlier)))
library(rstudioapi)
library(ggplot2)
library(pscl)
library(mvoutlier)
library(MVN)
ggplot(df2, aes(NoDonations, MonthsFirstDonation)) +
geom_point(aes(colour = factor(outlier)))
table(df2$outlier)
length(influential)
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
cat("\014")
rm(list=ls())
install.packages("caret")
library(caret)
